version: 0.2
env:
  secrets-manager:
    AWS_ACCESS_KEY_ID: "AWS_CREDENTIALS:AWS_ACCESS_KEY"
    AWS_SECRET_ACCESS_KEY: "AWS_CREDENTIALS:AWS_SECRET_KEY"
  git-credential-helper: yes

phases:
  install:
    commands:  
      - chmod u+x ./aws-kube-cd/prereq.sh
      - sh ./aws-kube-cd/prereq.sh
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .

      - echo Tagging the new image...
      - IMAGE_BASEID="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME"
      - echo Image base-id = $IMAGE_BASEID
      - chmod u+x ./aws-kube-cd/get-image-tag.sh
      - IMAGE_TAG="$(./aws-kube-cd/get-image-tag.sh $SOURCE_REPO_URL $CODEBUILD_RESOLVED_SOURCE_VERSION)"
      - docker tag $IMAGE_REPO_NAME $IMAGE_BASEID
      - docker tag $IMAGE_REPO_NAME $IMAGE_BASEID:$IMAGE_TAG

      - echo Pushing the Docker image...
      - docker push $IMAGE_BASEID
      - docker push $IMAGE_BASEID:$IMAGE_TAG
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
      - echo check config 
      - kubectl config view --minify
      - echo Check cluster access
      - kubectl get svc -n nqr 
      - echo Push the latest deployment to cluster
      - kubectl rollout restart deployment app-nqr -n nqr
